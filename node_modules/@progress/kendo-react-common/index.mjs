/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as e from "./tree-utils/itemIdUtils.mjs";
import { ZIndexContext as t, useZIndexContext as p } from "./contexts/ZIndexContext.mjs";
import { BrowserSupportService as a } from "./browser-support.service.mjs";
import { canUseDOM as n } from "./canUseDOM.mjs";
import { canUseRef as l } from "./canUseRef.mjs";
import { classNames as i } from "./classNames.mjs";
import { clone as d, cloneArray as u, cloneDate as I, cloneObject as C, cloneValue as h } from "./clone.mjs";
import { applyTrappedFocus as g, disableNavigatableContainer as b, enableNavigatableContainer as A, firstFocusableChild as v, focusFirstFocusableChild as S, focusLastFocusableChild as D, focusableChildren as F, keepFocusInContainer as T, lastFocusableChild as y } from "./trappedFocus.mjs";
import { FormComponent as N } from "./FormComponent.mjs";
import { getTabIndex as B } from "./getTabIndex.mjs";
import { getter as U } from "./getter.mjs";
import { guid as M } from "./guid.mjs";
import { Keys as _ } from "./keys.mjs";
import { noop as R } from "./noop.mjs";
import { getScrollbarWidth as Z, setScrollbarWidth as j } from "./scrollbarWidth.mjs";
import { setter as G } from "./setter.mjs";
import { FIELD_REGEX as K, FOCUSABLE_ELEMENTS as X, FOCUSABLE_ELEMENTS_BASE as q, TABBABLE_ELEMENTS as J } from "./constants/main.mjs";
import { extendDataItem as Y, getItemPath as $, mapTree as ee, mapTreeItem as oe } from "./treeDataOperations.mjs";
import { shouldShowValidationUI as te, validatePackage as pe } from "./validate-package.mjs";
import { hasRelativeStackingContext as ae } from "./hasRelativeStackingContext.mjs";
import { WatermarkOverlay as ne } from "./watermark/WatermarkOverlay.mjs";
import { dispatchEvent as le } from "./events/dispatchEvent.mjs";
import { AsyncFocusBlur as ie } from "./hocs/AsyncFocusBlur.mjs";
import { createPropsContext as de, withPropsContext as ue } from "./hocs/withPropsContext.mjs";
import { withIdHOC as Ce } from "./hocs/use-id-hoc.mjs";
import { useDir as Ee } from "./hooks/useDir.mjs";
import { useAsyncFocusBlur as be } from "./hooks/useAsyncFocusBlur.mjs";
import { useRtl as ve } from "./hooks/useRtl.mjs";
import { useMouse as De } from "./hooks/useMouse.mjs";
import { useCustomComponent as Te } from "./hooks/useCustomComponent.mjs";
import { usePropsContext as Le } from "./hooks/usePropsContext.mjs";
import { COLLECTION_ACTION as Oe, useCollection as Be } from "./hooks/useCollection.mjs";
import { useDocument as Ue } from "./hooks/useDocument.mjs";
import { useWindow as Me } from "./hooks/useWindow.mjs";
import { useId as _e } from "./hooks/use-id.mjs";
import { useIsomorphicLayoutEffect as Re } from "./hooks/use-isomorphic-layout-effect.mjs";
import { Icon as Ze } from "./icons/Icon.mjs";
import { SvgIcon as ze } from "./icons/SvgIcon.mjs";
import { IconWrap as He } from "./icons/IconWrap.mjs";
import { IconsContext as Xe } from "./icons/IconsContext.mjs";
import { svgIconPropType as Je, toIconClass as Qe, toIconName as Ye } from "./icons/utils.mjs";
import { Typography as eo } from "./typography/Typography.mjs";
import { DragAndDrop as ro } from "./drag-n-drop/index.mjs";
import { Draggable as po } from "./Draggable.mjs";
import { Droppable as ao } from "./Droppable.mjs";
import { useDraggable as no } from "./hooks/useDraggable.mjs";
import { useDroppable as lo } from "./hooks/useDroppable.mjs";
import { kendoThemeMaps as io } from "./theme.mjs";
import { memoizeOne as uo } from "./memoize.mjs";
import { Navigation as Co } from "./navigation.mjs";
import { getActiveElement as Eo, getInnerActiveElement as go } from "./getActiveElement.mjs";
import { TreeFieldsService as Ao } from "./tree-utils/FieldsService.mjs";
import { SortedPublicItemIds as So } from "./tree-utils/SortedPublicItemIds.mjs";
import { addItem as Fo, areAllDirectChildrenChecked as To, getAllDirectIndirectChildrenIds as yo, getAllParents as Lo, hasChildren as No, isEnabledAndAllParentsEnabled as Oo, isItemExpandedAndWithChildren as Bo, removeItem as Po, resolveItemId as Uo, resolveItemsIds as ko, updateItem as Mo } from "./tree-utils/itemUtils.mjs";
import { getNestedValue as _o, isArray as wo } from "./tree-utils/misc.mjs";
export {
  ie as AsyncFocusBlur,
  a as BrowserSupportService,
  Oe as COLLECTION_ACTION,
  ro as DragAndDrop,
  po as Draggable,
  ao as Droppable,
  K as FIELD_REGEX,
  X as FOCUSABLE_ELEMENTS,
  q as FOCUSABLE_ELEMENTS_BASE,
  N as FormComponent,
  Ze as Icon,
  He as IconWrap,
  Xe as IconsContext,
  _ as Keys,
  Co as Navigation,
  So as SortedPublicItemIds,
  ze as SvgIcon,
  J as TABBABLE_ELEMENTS,
  Ao as TreeFieldsService,
  eo as Typography,
  ne as WatermarkOverlay,
  t as ZIndexContext,
  Fo as addItem,
  g as applyTrappedFocus,
  To as areAllDirectChildrenChecked,
  n as canUseDOM,
  l as canUseRef,
  i as classNames,
  d as clone,
  u as cloneArray,
  I as cloneDate,
  C as cloneObject,
  h as cloneValue,
  de as createPropsContext,
  b as disableNavigatableContainer,
  le as dispatchEvent,
  A as enableNavigatableContainer,
  Y as extendDataItem,
  v as firstFocusableChild,
  S as focusFirstFocusableChild,
  D as focusLastFocusableChild,
  F as focusableChildren,
  Eo as getActiveElement,
  yo as getAllDirectIndirectChildrenIds,
  Lo as getAllParents,
  go as getInnerActiveElement,
  $ as getItemPath,
  _o as getNestedValue,
  Z as getScrollbarWidth,
  B as getTabIndex,
  U as getter,
  M as guid,
  No as hasChildren,
  ae as hasRelativeStackingContext,
  wo as isArray,
  Oo as isEnabledAndAllParentsEnabled,
  Bo as isItemExpandedAndWithChildren,
  T as keepFocusInContainer,
  io as kendoThemeMaps,
  y as lastFocusableChild,
  ee as mapTree,
  oe as mapTreeItem,
  uo as memoizeOne,
  R as noop,
  Po as removeItem,
  Uo as resolveItemId,
  ko as resolveItemsIds,
  j as setScrollbarWidth,
  G as setter,
  te as shouldShowValidationUI,
  Je as svgIconPropType,
  Qe as toIconClass,
  Ye as toIconName,
  e as treeIdUtils,
  Mo as updateItem,
  be as useAsyncFocusBlur,
  Be as useCollection,
  Te as useCustomComponent,
  Ee as useDir,
  Ue as useDocument,
  no as useDraggable,
  lo as useDroppable,
  _e as useId,
  Re as useIsomorphicLayoutEffect,
  De as useMouse,
  Le as usePropsContext,
  ve as useRtl,
  Me as useWindow,
  p as useZIndexContext,
  pe as validatePackage,
  Ce as withIdHOC,
  ue as withPropsContext
};
