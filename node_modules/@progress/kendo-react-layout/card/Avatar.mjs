/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as r from "react";
import a from "prop-types";
import { validatePackage as t, classNames as s, kendoThemeMaps as o } from "@progress/kendo-react-common";
import { avatarType as i } from "./interfaces/Enums.mjs";
import { packageMetadata as d } from "../package-metadata.mjs";
const n = (l) => {
  const e = {
    type: i.TEXT,
    size: "medium",
    rounded: "full",
    fillMode: "solid",
    themeColor: "primary",
    ...l
  };
  return t(d), /* @__PURE__ */ r.createElement(
    "div",
    {
      style: e.style,
      className: s(
        "k-avatar",
        {
          "k-avatar-bordered": e.border,
          [`k-rounded-${o.roundedMap[e.rounded] || e.rounded}`]: e.rounded,
          [`k-avatar-${o.sizeMap[e.size] || e.size}`]: e.size,
          [`k-avatar-${e.fillMode}`]: e.fillMode,
          [`k-avatar-${e.fillMode}-${e.themeColor}`]: !!(e.fillMode && e.themeColor)
        },
        e.className
      )
    },
    /* @__PURE__ */ r.createElement("span", { className: `k-avatar-${e.type}` }, e.children)
  );
};
n.propTypes = {
  className: a.string,
  type: a.oneOf(["text", "image", "icon"]),
  size: a.oneOf([null, "small", "medium", "large"]),
  rounded: a.oneOf([null, "small", "medium", "large", "full"]),
  fillMode: a.oneOf([null, "solid", "outline"]),
  /* eslint-disable max-len */
  themeColor: a.oneOf([null, "base", "dark", "error", "info", "inverse", "inverse", "light", "primary", "secondary", "success", "tertiary", "warning"])
};
export {
  n as Avatar
};
