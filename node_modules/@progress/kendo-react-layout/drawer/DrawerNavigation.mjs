/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as a from "react";
import n from "prop-types";
import { DrawerContext as S } from "./context/DrawerContext.mjs";
import { DrawerItem as B } from "./DrawerItem.mjs";
import { validatePackage as j, shouldShowValidationUI as K, classNames as V, WatermarkOverlay as q } from "@progress/kendo-react-common";
import { packageMetadata as N } from "../package-metadata.mjs";
const z = 240, G = 50, J = { type: "slide", duration: 200 }, Q = { type: "slide", duration: 0 }, h = a.forwardRef((I, T) => {
  const { children: b, className: D, style: m } = I;
  j(N);
  const E = K(N), {
    animation: l,
    expanded: s,
    mode: o,
    position: e,
    onOverlayClick: W,
    mini: r,
    dir: c,
    width: d,
    miniWidth: u,
    items: p,
    item: g,
    onSelect: x
  } = a.useContext(S), i = a.useRef(null), A = a.useCallback(
    () => {
      i.current && i.current.focus();
    },
    []
  ), t = typeof l != "boolean" ? l : l === !1 ? Q : J, y = d || z, f = u || G;
  a.useImperativeHandle(T, () => ({
    element: i.current,
    focus: A
  }));
  const O = a.useMemo(
    () => "k-widget k-drawer " + V(
      {
        "k-drawer-start": e === "start",
        "k-drawer-end": e === "end"
      },
      D
    ),
    [e]
  ), C = {
    opacity: 1,
    flexBasis: y,
    WebkitTransition: "all " + (t && t.duration) + "ms",
    /* Safari */
    transition: "all " + (t && t.duration) + "ms"
  }, M = {
    opacity: 1,
    transform: "translateX(0px)",
    WebkitTransition: "all " + (t && t.duration) + "ms",
    /* Safari */
    transition: "all " + (t && t.duration) + "ms"
  }, P = {
    opacity: r ? 1 : 0,
    flexBasis: r ? f : 0,
    WebkitTransition: "all " + (t && t.duration) + "ms",
    /* Safari */
    transition: "all " + (t && t.duration) + "ms"
  }, _ = {
    opacity: 0,
    transform: "translateX(-100%)",
    WebkitTransition: "all " + (t && t.duration) + "ms",
    /* Safari */
    transition: "all " + (t && t.duration) + "ms"
  }, R = {
    opacity: 0,
    transform: "translateX(100%)",
    WebkitTransition: "all " + (t && t.duration) + "ms",
    /* Safari */
    transition: "all " + (t && t.duration) + "ms"
  }, w = {
    transform: "translateX(0%)",
    WebkitTransitionDuration: (t && t.duration) + "ms",
    /* Safari */
    transitionDuration: (t && t.duration) + "ms"
  }, X = s ? o === "push" ? C : M : o === "push" ? P : c === "ltr" && e === "start" || c === "rtl" && e === "end" ? r ? w : _ : r ? w : R, F = p && /* @__PURE__ */ a.createElement(
    "ul",
    {
      className: "k-drawer-items",
      role: "menubar",
      "aria-label": "drawer-list",
      "aria-expanded": s
    },
    p.map(
      (L, v) => {
        const U = {
          index: v,
          ...L,
          onSelect: x
        }, H = g || B;
        return /* @__PURE__ */ a.createElement(H, { key: v, ...U });
      }
    )
  ), k = /* @__PURE__ */ a.createElement(
    "div",
    {
      style: t ? { ...X, ...m } : m,
      className: O,
      ref: i
    },
    /* @__PURE__ */ a.createElement(
      "div",
      {
        className: "k-drawer-wrapper",
        style: !s && r && o === "overlay" ? { width: f } : { width: y }
      },
      F || b
    ),
    E && /* @__PURE__ */ a.createElement(q, null)
  );
  return o === "overlay" ? /* @__PURE__ */ a.createElement(a.Fragment, null, s && /* @__PURE__ */ a.createElement("div", { className: "k-overlay", onClick: W }), k) : k;
});
h.propTypes = {
  children: n.any,
  className: n.string,
  style: n.object,
  item: n.any,
  tabIndex: n.number
};
h.displayName = "KendoDrawerNavigation";
export {
  h as DrawerNavigation
};
