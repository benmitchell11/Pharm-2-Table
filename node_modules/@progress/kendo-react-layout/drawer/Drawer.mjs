/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as t from "react";
import e from "prop-types";
import { DrawerContext as S } from "./context/DrawerContext.mjs";
import { DrawerNavigation as I } from "./DrawerNavigation.mjs";
import { validatePackage as W, useDir as O, classNames as T } from "@progress/kendo-react-common";
import { packageMetadata as j } from "../package-metadata.mjs";
const s = t.forwardRef((l, u) => {
  W(j);
  const {
    expanded: d,
    mode: n,
    position: p,
    className: f,
    children: v,
    style: w,
    animation: y,
    mini: m,
    width: h,
    miniWidth: b,
    items: a,
    item: k,
    tabIndex: g,
    onOverlayClick: x,
    onSelect: i
  } = l, r = t.useRef(null), E = t.useCallback(
    () => {
      r.current && r.current.focus();
    },
    []
  );
  t.useImperativeHandle(u, () => ({
    element: r.current,
    focus: E
  }));
  const N = t.useCallback(
    (D, P, o) => {
      if (a && i) {
        const R = {
          itemTarget: D,
          itemIndex: P,
          syntheticEvent: o,
          nativeEvent: o && o.nativeEvent,
          target: void 0
        };
        i.call(void 0, R);
      }
    },
    [a, i]
  ), c = O(r, l.dir), C = T(
    {
      "k-drawer-container": !0,
      "k-drawer-expanded": d,
      "k-drawer-overlay": n === "overlay",
      "k-drawer-push": n === "push",
      "k-drawer-mini": m
    },
    f
  );
  return /* @__PURE__ */ t.createElement(
    S.Provider,
    {
      value: {
        animation: y,
        expanded: d,
        mode: n,
        position: p,
        mini: m,
        dir: c,
        items: a,
        item: k,
        width: h,
        miniWidth: b,
        onOverlayClick: x,
        onSelect: N
      }
    },
    /* @__PURE__ */ t.createElement(
      "div",
      {
        className: C,
        ref: r,
        dir: c,
        style: w,
        tabIndex: g
      },
      a && /* @__PURE__ */ t.createElement(I, null),
      v
    )
  );
});
s.propTypes = {
  animation: e.any,
  expanded: e.bool,
  children: e.any,
  className: e.string,
  dir: e.string,
  mode: e.string,
  position: e.string,
  mini: e.bool,
  style: e.object,
  tabIndex: e.number,
  width: e.number,
  miniWidth: e.number,
  selected: e.number,
  onSelect: e.func,
  onOverlayClick: e.func
};
const H = {
  animation: !0,
  expanded: !1,
  mode: "overlay",
  position: "start",
  mini: !1,
  dir: "ltr",
  width: 240,
  miniWidth: 50
};
s.defaultProps = H;
s.displayName = "KendoDrawer";
export {
  s as Drawer
};
