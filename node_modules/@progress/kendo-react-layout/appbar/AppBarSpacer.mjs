/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as s from "react";
import r from "prop-types";
import { focusFirstFocusableChild as d, classNames as f } from "@progress/kendo-react-common";
const l = s.forwardRef((n, p) => {
  const {
    children: o,
    className: t,
    style: e
  } = n, a = s.useRef(null), c = s.useCallback(
    () => {
      a.current && d(a.current);
    },
    []
  ), i = s.useCallback(
    () => ({
      element: a.current,
      focus: c
    }),
    [c]
  );
  s.useImperativeHandle(p, i);
  const m = s.useMemo(
    () => f(
      "k-appbar-spacer",
      {
        "k-appbar-spacer-sized": e && e.width && e.width !== null
      },
      t
    ),
    [t, e]
  ), u = s.useMemo(
    () => ({
      flexBasis: e && e.width ? e.width : void 0
    }),
    [e]
  );
  return /* @__PURE__ */ s.createElement("span", { className: m, style: u }, o);
});
l.propTypes = {
  children: r.any,
  className: r.string,
  style: r.object
};
l.displayName = "KendoAppBarSpacer";
export {
  l as AppBarSpacer
};
