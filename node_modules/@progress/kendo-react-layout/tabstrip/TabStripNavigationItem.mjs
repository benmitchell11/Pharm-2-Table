/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as s from "react";
import e from "prop-types";
import { classNames as h } from "@progress/kendo-react-common";
const o = class o extends s.Component {
  constructor() {
    super(...arguments), this.itemRef = null, this.focus = () => {
      this.itemRef && (this.itemRef.tabIndex = 0, this.itemRef.focus());
    }, this.blur = () => {
      this.itemRef && (this.itemRef.tabIndex = -1, this.itemRef.blur());
    }, this.onClick = () => {
      this.props.onSelect && this.props.onSelect(this.props.index), this.itemRef && (this.itemRef.tabIndex = 0, this.itemRef.focus());
    };
  }
  /**
   * @hidden
   */
  render() {
    const { id: c, active: t, disabled: i, title: a = "Untitled", index: n, renderAllContent: m } = this.props, l = m ? `${this.props.contentPanelId}-${n.toString()}` : this.props.contentPanelId, d = {
      id: `${c}-${n.toString()}`,
      "aria-selected": t,
      "aria-controls": t ? l : void 0,
      "aria-disabled": i,
      role: "tab",
      onClick: i ? void 0 : this.onClick
    }, p = h("k-item", "k-tabstrip-item", {
      "k-disabled": i,
      "k-active": t
    });
    return /* @__PURE__ */ s.createElement("li", { ...d, className: p, ref: (f) => this.itemRef = f, onBlur: this.blur, "aria-controls": l }, /* @__PURE__ */ s.createElement("span", { className: "k-link" }, a));
  }
};
o.propTypes = {
  active: e.bool,
  disabled: e.bool,
  index: e.number,
  onSelect: e.func,
  title: e.oneOfType([
    e.string,
    e.element
  ]),
  first: e.bool,
  last: e.bool
};
let r = o;
export {
  r as TabStripNavigationItem
};
