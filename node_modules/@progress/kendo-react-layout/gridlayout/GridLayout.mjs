/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as i from "react";
import e from "prop-types";
import { packageMetadata as T } from "../package-metadata.mjs";
import { validatePackage as j, useId as R, classNames as A } from "@progress/kendo-react-common";
const r = i.forwardRef((t, g) => {
  j(T);
  const m = i.useRef(null), d = i.useCallback(
    () => ({
      element: m.current
    }),
    []
  );
  i.useImperativeHandle(g, d);
  const { className: c, style: u, id: h, children: y, gap: s } = t, f = R(), n = i.useMemo(
    () => t.align && t.align.horizontal ? t.align.horizontal : o.hAlign,
    [t.align]
  ), l = i.useMemo(
    () => t.align && t.align.vertical ? t.align.vertical : o.vAlign,
    [t.align]
  ), p = i.useMemo(
    () => A(
      "k-grid-layout",
      {
        "k-justify-items-start": n === "start",
        "k-justify-items-center": n === "center",
        "k-justify-items-end": n === "end",
        "k-justify-items-stretch": n === "stretch",
        "k-align-items-start": l === "top",
        "k-align-items-center": l === "middle",
        "k-align-items-end": l === "bottom",
        "k-align-items-stretch": l === "stretch"
      },
      c
    ),
    [n, l, c]
  ), k = s ? `${typeof s.rows == "number" ? s.rows + "px" : s.rows} ${typeof s.cols == "number" ? s.cols + "px" : s.cols}` : void 0, v = t.rows && t.rows.map((a) => `${typeof a.height == "number" ? a.height + "px" : a.height}`).join(" "), b = t.cols && t.cols.map((a) => `${typeof a.width == "number" ? a.width + "px" : a.width}`).join(" "), w = {
    gap: k,
    gridTemplateColumns: b,
    gridTemplateRows: v,
    ...u
  };
  return /* @__PURE__ */ i.createElement(
    "div",
    {
      ref: m,
      className: p,
      style: w,
      id: h || f
    },
    y
  );
}), o = {
  hAlign: "stretch",
  vAlign: "stretch",
  gap: void 0
};
r.propTypes = {
  className: e.string,
  style: e.object,
  children: e.any,
  id: e.string,
  gap: e.shape({
    rows: e.oneOfType([e.string, e.number]),
    columns: e.oneOfType([e.string, e.number])
  }),
  align: e.shape({
    vertical: e.oneOf(["top", "middle", "bottom", "stretch"]),
    horizontal: e.oneOf(["start", "center", "end", "stretch"])
  })
};
r.defaultProps = o;
r.displayName = "KendoReactGridLayout";
export {
  r as GridLayout
};
