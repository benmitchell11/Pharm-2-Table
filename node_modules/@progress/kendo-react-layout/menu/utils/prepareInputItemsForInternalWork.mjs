/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as R from "react";
import { createId as v, ZERO_LEVEL_ZERO_ITEM_ID as C } from "./itemsIdsUtils.mjs";
import { MenuItem as y } from "../components/MenuItem.mjs";
function b(t, n) {
  if (t && t.length > 0)
    return {
      items: c(t),
      inputItems: t
    };
  if (s(n).length > 0) {
    const e = h(s(n));
    return { items: c(e), inputItems: e };
  } else
    return { items: [], inputItems: [] };
}
function g(t, n) {
  let e = {};
  const { text: i, url: o, icon: r, svgIcon: d, disabled: l, cssClass: u, cssStyle: f, render: m, linkRender: p, contentRender: I, data: a } = t || n.props;
  return i !== void 0 && (e.text = i), o !== void 0 && (e.url = o), r !== void 0 && (e.icon = r), d !== void 0 && (e.svgIcon = d), l !== void 0 && (e.disabled = l), u !== void 0 && (e.cssClass = u), f !== void 0 && (e.cssStyle = f), m !== void 0 && (e.render = m), p !== void 0 && (e.linkRender = p), I !== void 0 && (e.contentRender = I), a !== void 0 && (e.data = a), e;
}
function s(t) {
  return R.Children.toArray(t).filter((n) => n && n.type === y);
}
function h(t) {
  const n = [];
  for (let e = 0; e < t.length; e++) {
    const i = t[e], o = g(void 0, i), r = h(s(i.props.children));
    r.length > 0 && (o.items = r), n.push(o);
  }
  return n;
}
function c(t, n) {
  const e = [];
  for (let i = 0; i < t.length; i++) {
    const o = t[i], r = g(o);
    r.id = v(i.toString(), n), r.isLastFromSiblings = i === t.length - 1, r.items = x(o, r), e.push(r);
  }
  return e;
}
function x(t, n) {
  return t.contentRender ? [{
    contentParentItemId: n.id,
    id: v(C, n.id),
    isLastFromSiblings: !0,
    contentRender: t.contentRender,
    items: []
  }] : t.items ? c(t.items, n.id) : [];
}
export {
  b as prepareInputItemsForInternalWork
};
