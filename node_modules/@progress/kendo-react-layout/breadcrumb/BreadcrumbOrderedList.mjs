/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as a from "react";
import t from "prop-types";
import { validatePackage as s, useDir as l, getTabIndex as i, classNames as n } from "@progress/kendo-react-common";
import { packageMetadata as b } from "../package-metadata.mjs";
const c = a.forwardRef((e, m) => {
  s(b);
  const r = a.useRef(null), d = a.useRef(null);
  return a.useImperativeHandle(r, () => ({
    element: d.current,
    props: e
  })), a.useImperativeHandle(m, () => r.current), /* @__PURE__ */ a.createElement(a.Fragment, null, e.rootItem ? /* @__PURE__ */ a.createElement(
    "ol",
    {
      id: e.id,
      ref: d,
      style: e.style,
      dir: l(d, e.dir),
      tabIndex: i(e.tabIndex, e.disabled),
      className: n(
        "k-breadcrumb-root-item-container",
        {
          "k-disabled": e.disabled
        },
        e.className
      )
    },
    e.children
  ) : /* @__PURE__ */ a.createElement(
    "ol",
    {
      id: e.id,
      ref: d,
      style: e.style,
      dir: l(d, e.dir),
      tabIndex: i(e.tabIndex, e.disabled),
      className: n(
        "k-breadcrumb-container !k-flex-wrap",
        {
          "k-disabled": e.disabled
        },
        e.className
      )
    },
    e.children
  ));
}), u = {
  id: t.string,
  className: t.string,
  children: t.element,
  tabIndex: t.number,
  style: t.object,
  dir: t.string,
  disabled: t.bool
};
c.displayName = "KendoReactBreadcrumbOrderedList";
c.propTypes = u;
export {
  c as BreadcrumbOrderedList
};
