/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";"use strict";Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"});const x=require("react"),i=require("prop-types"),E=require("./Animation.js"),y=require("@progress/kendo-react-common"),u=require("./util.js");function W(r){const t=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(r){for(const e in r)if(e!=="default"){const n=Object.getOwnPropertyDescriptor(r,e);Object.defineProperty(t,e,n.get?n:{enumerable:!0,get:()=>r[e]})}}return t.default=r,Object.freeze(t)}const m=W(x),c=class c extends m.Component{constructor(){super(...arguments),this.state={maxHeight:void 0,maxWidth:void 0},this.componentWillEnter=t=>{const{onEnter:e,onBeforeEnter:n}=this.props;n&&n.call(void 0,t),this.updateContainerDimensions(t.animatedElement,()=>{e&&e.call(void 0,t)})},this.componentIsEntering=t=>{const{onEntering:e}=this.props;this.updateContainerDimensions(t.animatedElement,()=>{e&&e.call(void 0,t)})},this.componentWillExit=t=>{const{onExit:e}=this.props;this.updateContainerDimensions(t.animatedElement,()=>{e&&e.call(void 0,t)})},this.updateContainerDimensions=(t,e=y.noop)=>{const n=t.firstChild;if(n){const l=u.outerHeight(n),a=u.outerWidth(n);this.setState({maxHeight:l,maxWidth:a},e)}}}render(){const{direction:t,children:e,childFactory:n,...l}=this.props,{maxHeight:a,maxWidth:p}=this.state;let o;t==="vertical"?o={maxHeight:a?`${a}px`:""}:o={maxWidth:p?`${p}px`:""};const f={maxHeight:o.maxHeight,maxWidth:o.maxWidth},g=d=>{let s=n?n(d):d;return s.props.in?s:m.cloneElement(s,{...s.props,style:{...s.props.style,maxHeight:o.maxHeight,maxWidth:o.maxWidth}})};return m.createElement(E.Animation,{...l,childFactory:g,onEnter:this.componentWillEnter,onEntering:this.componentIsEntering,onExit:this.componentWillExit,animationEnteringStyle:f,transitionName:`reveal-${t}`},e)}};c.propTypes={children:i.oneOfType([i.arrayOf(i.node),i.node]),childFactory:i.any,className:i.string,direction:i.oneOf(["horizontal","vertical"]),component:i.string,id:i.string,style:i.any},c.defaultProps={appear:!1,enter:!0,exit:!0,transitionEnterDuration:300,transitionExitDuration:300,direction:"vertical"};let h=c;exports.Reveal=h;
