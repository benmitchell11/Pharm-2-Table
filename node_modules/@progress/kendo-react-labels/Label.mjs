/**
 * @license
 *-------------------------------------------------------------------------------------------
 * Copyright Â© 2024 Progress Software Corporation. All rights reserved.
 * Licensed under commercial license. See LICENSE.md in the package root for more information
 *-------------------------------------------------------------------------------------------
 */
"use client";
import * as a from "react";
import e from "prop-types";
import { validatePackage as L, classNames as v } from "@progress/kendo-react-common";
import { labelsOptional as s, messages as C } from "./messages/index.mjs";
import { useLocalization as D } from "@progress/kendo-react-intl";
import { packageMetadata as R } from "./package-metadata.mjs";
const c = (m) => {
  L(R);
  const { id: p, editorId: d, editorRef: t, editorDisabled: o, children: l, editorValid: f, style: b, className: u, optional: k } = m, g = D(), r = k ? g.toLanguageString(s, C[s]) : "", y = r && /* @__PURE__ */ a.createElement("span", { className: "k-label-optional" }, r), N = a.useCallback(
    (i) => {
      if (t && t.current && !o) {
        t.current.focus && (i.preventDefault(), t.current.focus());
        const n = t.current.actionElement;
        n && (i.preventDefault(), n.click());
      }
    },
    [t]
  ), E = v(
    {
      "k-label": !0,
      "k-label-empty": !l,
      "k-text-error": f === !1,
      "k-text-disabled": o === !0
    },
    u
  );
  return /* @__PURE__ */ a.createElement(
    "label",
    {
      id: p,
      htmlFor: d,
      onClick: N,
      style: b,
      className: E
    },
    l,
    y
  );
};
c.propTypes = {
  id: e.string,
  editorId: e.string,
  editorRef: e.oneOfType([
    e.func,
    e.shape({ current: e.any })
  ]),
  editorValid: e.bool,
  editorDisabled: e.bool,
  style: e.object,
  className: e.string,
  optional: e.bool
};
c.displayName = "KendoReactLabel";
export {
  c as Label
};
